version: '2'

services:
    mongodb:
        image: mongo
        restart: always
        volumes:
            - /data/db
    savegame_service:
        build:
            context: ./savegameservice
            dockerfile: ./Dockerfile
        restart: always
        environment:
            - MONGODB_DATABASE=mydatabase
            - PORT=80
        depends_on:
            - mongodb
        links:
            - mongodb:mongodb
    db:
        image: postgres
        restart: always
        environment:
            - POSTGRES_PASSWORD=TheseHaveToBeTheSame
            - POSTGRES_USER=docker
        ports:
            - "5432:5432"
        volumes:
            - /var/lib/postgresql/data
    account_service:
        build:
            context: ./accountservice
            dockerfile: ./Dockerfile
        restart: always
        environment:
            - JWTSecret=TomGeefInsEenSecret!
            - POSTGRES_PASSWORD=TheseHaveToBeTheSame
            - POSTGRES_USER=docker
            - PORT=80
        depends_on:
            - db
        links:
            - db:db
    question_service:
        build:
            context: ./questionservice
            dockerfile: ./Dockerfile
        restart: always
        environment:
            - POSTGRES_PASSWORD=TheseHaveToBeTheSame
            - POSTGRES_USER=docker
            - PORT=80
        depends_on:
            - db
        links:
            - db:db
    fitness_service:
        build:
            context: ./fitnessservice
            dockerfile: ./Dockerfile
        restart: always
        environment:
            - POSTGRES_PASSWORD=TheseHaveToBeTheSame
            - POSTGRES_USER=docker
            - PORT=80
        depends_on:
            - db
        links:
            - db:db
    feedback_service:
        build:
            context: ./feedbackservice
            dockerfile: ./Dockerfile
        restart: always
        environment:
            - POSTGRES_PASSWORD=TheseHaveToBeTheSame
            - POSTGRES_USER=docker
            - PORT=80
        depends_on:
            - db
        links:
            - db:db
    proxy_service:
        build:
            context: ./proxy
            dockerfile: ./Dockerfile
        restart: always
        environment:
            - PORT=80
        ports:
            - "80:80"
        links:
            - question_service:question_service
            - account_service:account_service
            - savegame_service:savegame_service
            - fitness_service:fitness_service
            - feedback_service:feedback_service
